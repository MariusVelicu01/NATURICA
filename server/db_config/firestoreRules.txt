rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin(uid) {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(uid)).data.role == 'admin';
    }

    function isClient(uid) {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(uid)).data.role == 'client';
    }

    match /symptoms/{document=**} {
      allow read, write: if isAdmin(request.auth.uid);
      allow read: if isClient(request.auth.uid);
    }

    match /conditions/{document=**} {
      allow read, write: if isAdmin(request.auth.uid);
      allow read: if isClient(request.auth.uid);
    }

    match /products/{document=**} {
      allow read, write: if isAdmin(request.auth.uid);
      allow read: if isClient(request.auth.uid);
    }

    match /orders/{document=**} {
      allow read, write: if isClient(request.auth.uid) && request.auth.uid == resource.data.userId;
      allow read, write: if isAdmin(request.auth.uid);
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}